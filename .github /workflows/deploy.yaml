name: First-Time Deploy Frontend via SSM

on:
  push:
    branches: [main]
  workflow_dispatch: # Optional: Enables manual "Run workflow" button in GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üì¶ Prepare deployment package
        run: |
          mkdir deploy-package
          shopt -s dotglob
          for item in * .[^.]*; do
            if [[ "$item" != "deploy-package" && "$item" != ".git" && "$item" != "node_modules" ]]; then
              cp -r "$item" deploy-package/
            fi
          done
          cd deploy-package
          zip -r ../user-app-frontend-deploy.zip .

      - name: ‚òÅÔ∏è Upload to S3
        run: |
          aws s3 cp user-app-frontend-deploy.zip s3://${{ secrets.S3_BUCKET_NAME }}/deployment/user-app-frontend/user-app-frontend-deploy.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: üöÄ SSM Deploy Script (Frontend Setup)
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ secrets.AWS_REGION }}

          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=InstanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --region ${{ secrets.AWS_REGION }} \
            --comment "Frontend App Deployment via SSM" \
            --parameters commands='[
              "sudo apt update && sudo apt upgrade -y",
              "sudo apt install -y unzip curl",
              "curl -fsSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip",
              "unzip -o awscliv2.zip",
              "sudo ./aws/install",
              "curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -",
              "sudo apt install -y nodejs build-essential nginx",
              "sudo npm install -g pm2",
              "sudo mkdir -p /var/www/user-app-frontend",
              "sudo chown -R $USER:$USER /var/www/user-app-frontend",
              "aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/deployment/user-app-frontend/user-app-frontend-deploy.zip /tmp/user-app-frontend-deploy.zip",
              "unzip -o /tmp/user-app-frontend-deploy.zip -d /tmp/user-app-frontend",
              "cp -r /tmp/user-app-frontend/. /var/www/user-app-frontend/",
              "cd /var/www/user-app-frontend",
              "npm install",
              "npm run build",
              "pm2 start ecosystem.config.cjs",
              "pm2 save",
              "pm2 startup"
            ]' \
            --timeout-seconds 1200 \
            --max-concurrency "1" \
            --max-errors "1" \
            --cloud-watch-output-config '{"CloudWatchOutputEnabled":true}'
